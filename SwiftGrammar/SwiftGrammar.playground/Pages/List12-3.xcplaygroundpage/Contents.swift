// クロージャをもつ変数自体をアンラップする場合は(() -> ())!のように書く
var m1:(() -> ())! = nil  // クロージャを代入する変数
var m2:(() -> ())! = nil

// 2つのクロージャのインスタンスを生成してそれぞれ変数m1とm2に代入
func makerW(_ a:Int) {
    var localvar = a
    // 2つのクロージャは似た形をしているが、ローカル変数localvarの変化が違う
    m1 = { localvar += 1; print("m1: \(localvar)")}
    m2 = { localvar += 5; print("m2: \(localvar)")}
    m1()                        // [1] クロージャを呼び出してみる
    print("--: \(localvar)")    // [2]
    m2()                        // [3] クロージャを呼び出してみる
    print("--: \(localvar)")    // [4]
}

makerW(10)          // クロージャを生成する
print("----")
m1()                // [5] クロージャを交互に呼び出してみる
m2()                // [6]
m1()                // [7]

